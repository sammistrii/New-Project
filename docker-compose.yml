version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eco_points_postgres
    environment:
      POSTGRES_DB: eco_points
      POSTGRES_USER: eco_user
      POSTGRES_PASSWORD: eco_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - eco_network

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: eco_points_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eco_network

  # MinIO for S3-compatible object storage (local development)
  minio:
    image: minio/minio:latest
    container_name: eco_points_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - eco_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eco_points_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://eco_user:eco_password@postgres:5432/eco_points
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET: eco-points-videos
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - eco_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eco_points_frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - eco_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  eco_network:
    driver: bridge