services:
  # PostgreSQL Database
  - type: pserv
    name: eco-points-db
    env: postgresql
    plan: free
    ipAllowList: []

  # Redis for caching and queues
  - type: redis
    name: eco-points-redis
    plan: free
    ipAllowList: []

  # Backend API (NestJS)
  - type: web
    name: eco-points-backend
    env: node
    plan: free
    buildCommand: cd backend && npm install && npm run build
    startCommand: cd backend && npm run start:prod
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3001
      - key: DATABASE_URL
        fromDatabase:
          name: eco-points-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: eco-points-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      - key: S3_ENDPOINT
        value: https://eco-points-minio.onrender.com
      - key: S3_ACCESS_KEY
        value: minioadmin
      - key: S3_SECRET_KEY
        value: minioadmin123
      - key: S3_BUCKET
        value: eco-points
      - key: S3_REGION
        value: us-east-1
      - key: S3_FORCE_PATH_STYLE
        value: true
      # International Payment Gateways
      - key: STRIPE_SECRET_KEY
        value: sk_test_... # Add your Stripe test key
      - key: PAYPAL_CLIENT_ID
        value: test_client_id # Add your PayPal test credentials
      - key: PAYPAL_CLIENT_SECRET
        value: test_secret # Add your PayPal test credentials
      
      # Indian Payment Gateways
      - key: GOOGLE_PAY_MERCHANT_ID
        value: your_google_pay_merchant_id
      - key: PHONEPE_MERCHANT_ID
        value: your_phonepe_merchant_id
      - key: PAYTM_MERCHANT_ID
        value: your_paytm_merchant_id
      - key: BHIM_UPI_MERCHANT_ID
        value: your_bhim_merchant_id
      - key: AMAZON_PAY_MERCHANT_ID
        value: your_amazon_pay_merchant_id
      - key: WHATSAPP_PAY_MERCHANT_ID
        value: your_whatsapp_pay_merchant_id
      - key: SMTP_HOST
        value: smtp.gmail.com # Configure your email service
      - key: SMTP_PORT
        value: 587
      - key: SMTP_USER
        value: your-email@gmail.com
      - key: SMTP_PASS
        value: your-app-password
      - key: SMTP_FROM
        value: your-email@gmail.com
      - key: FRONTEND_URL
        value: https://eco-points-frontend.onrender.com

  # Frontend (Next.js)
  - type: web
    name: eco-points-frontend
    env: node
    plan: free
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: NEXT_PUBLIC_API_URL
        value: https://eco-points-backend.onrender.com
      - key: NEXT_PUBLIC_APP_URL
        value: https://eco-points-frontend.onrender.com
    routes:
      - type: rewrite
        source: /api/*
        destination: https://eco-points-backend.onrender.com/api/*

  # MinIO Object Storage (S3-compatible)
  - type: web
    name: eco-points-minio
    env: docker
    plan: free
    dockerfilePath: ./Dockerfile.minio
    envVars:
      - key: PORT
        value: 9000
      - key: MINIO_ROOT_USER
        value: minioadmin
      - key: MINIO_ROOT_PASSWORD
        value: minioadmin123
      - key: MINIO_BUCKET
        value: eco-points
      - key: MINIO_CONSOLE_PORT
        value: 9001